{"version":3,"sources":["../src/realtime.js"],"names":["Application","Container","Text","Texture","Sprite","Graphics","ticker","pixiTicker","RealtimeBarrage","constructor","options","rowHeight","styleType","width","rowCount","height","speed","speedStep","giftFormat","onRowOut","space","rowCountMap","i","app","transparent","antialias","container","stage","aliveCheckTime","_initTicker","_initSubTicker","start","started","stoped","push","args","row","Array","forEach","item","_getNextRow","sprite","_getSprite1","x","y","addChild","getView","view","getCount","children","length","stop","subTicker","clear","removeChildren","isStoped","destroy","_getStyle","type","style","fontSize","shadow","Object","assign","dropShadow","dropShadowAlpha","dropShadowAngle","dropShadowBlur","dropShadowDistance","dropShadowColor","fill","nextRow","minCount","currCount","styles","isCurrUser","user","preText","afterText","fontStyle","letterSpacing","fontWeight","_getSprite","paddingTop","paddingLeft","color","backgroundSprite","beginFill","drawRoundedRect","gift","replace","name","preTextSprite","imgSprite","fromImage","url","afterTextSprite","count","emoji","img","textSprite","text","Ticker","autoStart","add","_refreshAlive","_refresh","alive","aliveTimeout","clearTimeout","setTimeout","SubTicker","speedTimes","outedList","rowOuted","removeChild","fn","running","logicFn","interval","setInterval","window","clearInterval"],"mappings":"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","file":"realtime.js","sourcesContent":["/*\n * 实时弹幕组件\n *  - 新增加的弹幕会立即进行展示\n *  - 量大时会有重叠\n */\n\nimport {Application, Container, Text, Texture, Sprite, Graphics, ticker as pixiTicker} from 'pixi.js/lib/core'\n\nclass RealtimeBarrage {\n  constructor(options) {\n    options = options || {}\n\n    let rowHeight\n\n    // 判断样式类型\n    let styleType = options.styleType || 's1'\n    switch (styleType) {\n      case 's1':\n        rowHeight = 35\n        break\n      case 's2':\n        rowHeight = 60\n        break\n      default:\n        rowHeight = 35\n    }\n\n    // 读取参数\n    let width = options.width || 1000\n    let rowCount = options.rowCount || 3\n    let height = rowCount * rowHeight\n    this.width = width\n    this.rowHeight = rowHeight\n    this.speed = options.speed || 1\n    this.speedStep = options.speedStep || 0.2\n    this.giftFormat = options.giftFormat || '${name}: 送出${giftname}'\n    this.onRowOut = options.onRowOut || function () {\n    }\n    this.space = options.space || 30\n    this.styleType = styleType\n\n    // 各行统计数据，用于确定下一条弹幕放在哪一行\n    let rowCountMap = {}\n    for (let i = 1; i <= rowCount; i++) {\n      rowCountMap[i] = 0\n    }\n    this.rowCountMap = rowCountMap\n\n    // 构建PIXI App实例\n    let app = new Application(width, height, {transparent: true, antialias: true})\n    this.app = app\n    this.container = app.stage\n    this.aliveCheckTime = 0\n\n    // 初始化计时器\n    this._initTicker()\n\n    //初始化备用计时器（页面失焦时使用\n    this._initSubTicker()\n  }\n\n  start() {\n    if (!this.ticker.started) {\n      this.stoped = false\n      this.ticker.start()\n    }\n  }\n\n  push(args, row) {\n    if (!(args instanceof Array)) {\n      args = [args]\n    }\n\n    // 处理新加入的弹幕\n    args.forEach((item) => {\n      row = row || this._getNextRow()\n      let sprite = this._getSprite1(item)\n\n      // 设置属性\n      sprite.row = row\n      sprite.speed = this.speed * (1 + row * this.speedStep)\n      sprite.x = this.width\n      sprite.y = (row - 1) * this.rowHeight + 5\n\n      this.container.addChild(sprite)\n      this.rowCountMap[row] += 1\n    })\n  }\n\n  getView() {\n    return this.app.view\n  }\n\n  getCount() {\n    return this.container.children.length\n  }\n\n  stop() {\n    this.ticker.stop()\n    this.subTicker.stop()\n    this.stoped = true\n  }\n\n  clear() {\n    this.container.removeChildren()\n    for (let row in this.rowCountMap) {\n      this.rowCountMap[row] = 0\n    }\n  }\n\n  isStoped() {\n    return this.stoped\n  }\n\n  destroy() {\n    this.stop()\n    this.clear()\n    this.app.destroy()\n    this.subTicker.destroy()\n    this.ticker = null\n    this.subTicker = null\n  }\n\n  _getStyle(type, options) {\n    options = options || {}\n\n    let style = {\n      fontSize: 18,\n    }\n\n    if (options.shadow) {\n      // TODO 优化shadow，以保持和UI设计一致\n      Object.assign(style, {\n        dropShadow: true,\n        dropShadowAlpha: 3,\n        dropShadowAngle: 1,\n        dropShadowBlur: 2,\n        dropShadowDistance: 0,\n        dropShadowColor: '#000000',\n      })\n    }\n\n    if (type === 'orange') {\n      style.fill = '#ff9000'\n    }\n    if (type === 'white') {\n      style.fill = '#ffffff'\n    }\n    if (type === 'yellow') {\n      style.fill = '#FFE700'\n    }\n\n    return style\n  }\n\n  // 获取下一个最适合放置的行\n  _getNextRow() {\n    let nextRow = 1\n    let minCount = this.rowCountMap[nextRow]\n\n    for (let row in this.rowCountMap) {\n      let currCount = this.rowCountMap[row]\n      if (currCount < minCount) {\n        minCount = currCount\n        nextRow = row\n      }\n    }\n\n    return nextRow\n  }\n\n  _getSprite1(item) {\n    let styles\n\n    // 将名字强制设置为'我'\n    if (item.isCurrUser) {\n      item.user = '我'\n    }\n\n    if (this.styleType === 's1') {\n      // 当前用户使用高亮样式模板\n      if (item.isCurrUser) {\n        styles = {\n          preText: this._getStyle('orange', {shadow: true}),\n          afterText: this._getStyle('orange', {shadow: true}),\n        }\n      } else {\n        styles = {\n          preText: this._getStyle('white', {shadow: true}),\n          afterText: this._getStyle('white', {shadow: true}),\n        }\n      }\n\n      styles.preText.fontSize = 18\n\n      Object.assign(styles.afterText, {\n        fontSize: 20,\n        fontStyle: 'italic',\n        letterSpacing: 3,\n      })\n    } else if (this.styleType === 's2') {\n      styles = {\n        preText: this._getStyle('white'),\n        afterText: this._getStyle('yellow'),\n      }\n\n      styles.preText.fontSize = 24\n\n      Object.assign(styles.afterText, {\n        fontSize: 24,\n        letterSpacing: 3,\n        fontWeight: 600\n      })\n    }\n\n    if (this.styleType === 's1') {\n      return this._getSprite(item, styles)\n    } else if (this.styleType === 's2') {\n      let sprite = this._getSprite(item, styles)\n      let paddingTop = 10\n      let paddingLeft = 24\n      let color = item.isCurrUser ? 0x544ab0 : 0x303030\n\n      let backgroundSprite = new Graphics().beginFill(color, 0.3).drawRoundedRect(0, 0, sprite.width + paddingLeft * 2, 23 + paddingTop * 2, 21)\n      sprite.x = paddingLeft\n      sprite.y = paddingTop - 3\n      backgroundSprite.addChild(sprite)\n\n      return backgroundSprite\n    }\n  }\n\n  // 构建一条弹幕的Sprite实例\n  _getSprite(item, styles) {\n    let sprite = new Container()\n\n    // 礼物类弹幕\n    if(item.gift) {\n      // 发送人部分\n      let preText = this.giftFormat.replace('${name}', item.user)\n      preText = preText.replace('${giftname}', item.gift.name)\n\n      let preTextSprite = new Text(preText, styles.preText)\n\n      // 礼物图片部分\n      let imgSprite = new Sprite(new Texture.fromImage(item.gift.url))\n      imgSprite.x = preTextSprite.width + 3\n      imgSprite.y = -8\n      imgSprite.height = 40\n      imgSprite.width = 40\n\n      // 礼物数量描述部分\n      let afterTextSprite = new Text(`x${item.gift.count}`, styles.afterText)\n      afterTextSprite.x = imgSprite.x + imgSprite.width + 3\n\n      // 组合各个部分\n      sprite.addChild(preTextSprite)\n      sprite.addChild(imgSprite)\n      sprite.addChild(afterTextSprite)\n    } else if(item.emoji) {\n      // 表情类弹幕\n\n      // 发送人部分\n      let preTextSprite = new Text(`${item.user}：`, styles.preText)\n\n      // 表情图片部分\n      let imgSprite = new Sprite(new Texture.fromImage(item.emoji.img))\n      imgSprite.x = preTextSprite.width + 3\n      imgSprite.y = -8\n      imgSprite.height = 40\n      imgSprite.width = 40\n\n      // 组合各个部分\n      sprite.addChild(preTextSprite)\n      sprite.addChild(imgSprite)\n    } else {\n      // 文字类弹幕\n      let textSprite = new Text(`${item.user}：${item.text}`, styles.preText)\n      sprite.addChild(textSprite)\n    }\n\n    return sprite\n  }\n\n  // 初始化计时器\n  _initTicker() {\n    let ticker = new pixiTicker.Ticker()\n    ticker.autoStart = false\n    ticker.stop()\n    ticker.add(() => {\n      this._refreshAlive()\n\n      this._refresh(1)\n    })\n\n    this.ticker = ticker\n  }\n\n  // 更新pixiTicker的alive状态(心跳)\n  _refreshAlive() {\n    // 定量抽查\n    // 即每触发60次refresh，才会真正执行一次检查逻辑\n    this.aliveCheckTime += 1\n    if (this.aliveCheckTime < 60) return\n\n    // console.log('复活检测...')\n    this.aliveCheckTime = 0\n    // 处理复活逻辑\n    if (!this.alive) {\n      // console.log('已复活')\n      this.subTicker.stop()\n    }\n    this.alive = true\n\n    if (this.aliveTimeout) {\n      clearTimeout(this.aliveTimeout)\n      this.aliveTimeout = null\n    }\n    // 3秒无活动，判定为不活跃状态\n    this.aliveTimeout = setTimeout(() => {\n      if (!this.stoped) {\n        // console.log('dead~')\n        this.subTicker.start()\n        this.alive = false\n      }\n    }, 3000)\n  }\n\n  //初始化备用计时器(页面失焦时使用)\n  _initSubTicker() {\n    var subTicker = new SubTicker(() => {\n      this._refresh(60)\n    })\n    subTicker.stop()\n\n    this.subTicker = subTicker\n  }\n\n  _refresh(speedTimes) {\n    let outedList = []\n    // 遍历容器中所有的弹幕Sprite\n    this.container.children.forEach((sprite) => {\n      // 移动其x坐标\n      sprite.x -= sprite.speed * speedTimes\n\n      // 判断是否已出界\n      if(sprite.x + sprite.width < 0) {\n        outedList.push(sprite)\n      }\n\n      // 判断内容是否已全部露出，用于队列式的追加\n      if(!sprite.rowOuted && (sprite.x + sprite.width + this.space < this.width)) {\n        sprite.rowOuted = true\n        this.onRowOut(sprite.row)\n      }\n    })\n\n    // 销毁已经出界的弹幕\n    outedList.forEach((sprite) => {\n      this.container.removeChild(sprite)\n      this.rowCountMap[sprite.row] -= 1\n      sprite.destroy()\n    })\n  }\n}\n\n// 备用Ticker，在pixiTicker失效时进行工作，确保ticker正常进行\n// pixiTicker失效一般是浏览器页面退到系统后台的时候\nclass SubTicker {\n  constructor (fn) {\n    this.running = false\n    this.logicFn = fn\n\n    this.interval = setInterval(() => {\n      if (!this.running) return\n\n      fn()\n    }, 1000)\n  }\n\n  start() {\n    this.running = true\n  }\n\n  stop() {\n    this.running = false\n  }\n\n  destroy() {\n    if(this.interval) {\n      window.clearInterval(this.interval)\n    }\n  }\n}\n\nexport default RealtimeBarrage\n"]}